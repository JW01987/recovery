generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Comments {
  id        Int      @id @default(autoincrement())
  content   String    @db.Text
  userId    Int
  postId    Int
  createdAt DateTime   @db.DateTime(0) @default(now())
  updatedAt DateTime   @db.DateTime(0) @updatedAt


  Posts     Posts    @relation(fields: [postId], references: [id], onDelete: Cascade)
  Users     Users    @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model Posts {
  id        Int        @id @default(autoincrement())
  title     String    
  content   String     @db.Text
  userId    Int
  createdAt DateTime   @db.DateTime(0) @default(now())
  updatedAt DateTime   @db.DateTime(0) @updatedAt

  Comments  Comments[]
  Likes     Likes[]
  Users     Users      @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model Users {
  id        Int        @id @default(autoincrement())
  nickname  String     @unique
  password  String
  createdAt DateTime   @db.DateTime(0) @default(now())
  updatedAt DateTime   @db.DateTime(0) @updatedAt  
 
  Posts     Posts[]
  Comments  Comments[]
  Likes     Likes[]
}

model Likes{
  id        Int       @id @default(autoincrement())
  like      Boolean   @default(true)
  userId    Int 
  postId    Int
  createdAt DateTime   @db.DateTime(0) @default(now())
  updatedAt DateTime   @db.DateTime(0) @updatedAt

  Users     Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  Posts     Posts    @relation(fields: [postId], references: [id], onDelete: Cascade)
}

